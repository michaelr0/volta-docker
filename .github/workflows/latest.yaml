name: Docker - latest

on:
  push:
    branches:
      - 'main'
    paths:
      - .github/workflows/latest.yaml
      - 'latest/**'

env:
  PLATFORMS: |
    linux/amd64
    linux/aarch64

jobs:
  build-latest-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: ${{ secrets.DOCKERCLOUD_BUILDER }}
          platforms: ${{ env.PLATFORMS }}
          install: true

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: latest
          file: latest/ubuntu/Dockerfile
          platforms: ${{ env.PLATFORMS }}
          tags: |
            ${{ github.repository }}:ubuntu
            ${{ github.repository }}:latest
          # For pull requests, export results to the build cache.
          # Otherwise, push to a registry.
          outputs: ${{ github.event_name == 'pull_request' && 'type=cacheonly' || 'type=registry,push=true' }}

  build-latest-alpine:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: ${{ secrets.DOCKERCLOUD_BUILDER }}
          platforms: ${{ env.PLATFORMS }}
          install: true

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: latest
          file: latest/alpine/Dockerfile
          platforms: ${{ env.PLATFORMS }}
          tags: |
            ${{ github.repository }}:alpine

          # For pull requests, export results to the build cache.
          # Otherwise, push to a registry.
          outputs: ${{ github.event_name == 'pull_request' && 'type=cacheonly' || 'type=registry,push=true' }}
