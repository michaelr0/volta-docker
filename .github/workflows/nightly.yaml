name: Build nightly images

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'
  pull_request:
    paths:
      - .github/workflows/nightly.yaml
      - 'nightly/**'
      - 'shared/**'
  push:
    branches:
      - 'main'
    paths:
      - .github/workflows/nightly.yaml
      - 'nightly/**'
      - 'shared/**'

env:
  PLATFORMS: |
    linux/amd64
    linux/aarch64

jobs:
  build-nightly-ubuntu-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: ${{ secrets.DOCKERCLOUD_BUILDER }}
          platforms: linux/amd64
          install: true

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: nightly/Dockerfile-ubuntu
          platforms: linux/amd64
          tags: |
            ${{ github.repository }}:nightly
          # For pull requests, export results to the build cache.
          # Otherwise, push to a registry.
          outputs: ${{ github.event_name == 'pull_request' && 'type=cacheonly' || 'type=registry,push=true' }}

  build-nightly-ubuntu-aarch64:
    runs-on: ubuntu-latest
    needs: build-nightly-ubuntu-amd64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: ${{ secrets.DOCKERCLOUD_BUILDER }}
          platforms: linux/aarch64
          install: true

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: nightly/Dockerfile-ubuntu
          platforms: linux/aarch64
          tags: |
            ${{ github.repository }}:nightly
          # For pull requests, export results to the build cache.
          # Otherwise, push to a registry.
          outputs: ${{ github.event_name == 'pull_request' && 'type=cacheonly' || 'type=registry,push=true' }}

  build-nightly-alpine-amd64:
    runs-on: ubuntu-latest
    needs: build-nightly-ubuntu-aarch64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: ${{ secrets.DOCKERCLOUD_BUILDER }}
          platforms: linux/amd64
          install: true

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: nightly/Dockerfile-alpine
          platforms: linux/amd64
          tags: |
            ${{ github.repository }}:nightly-alpine

          # For pull requests, export results to the build cache.
          # Otherwise, push to a registry.
          outputs: ${{ github.event_name == 'pull_request' && 'type=cacheonly' || 'type=registry,push=true' }}

  build-nightly-alpine-aarch64:
    runs-on: ubuntu-latest
    needs: build-nightly-alpine-amd64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: ${{ secrets.DOCKERCLOUD_BUILDER }}
          platforms: linux/aarch64
          install: true

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: nightly/Dockerfile-alpine
          platforms: linux/aarch64
          tags: |
            ${{ github.repository }}:nightly-alpine

          # For pull requests, export results to the build cache.
          # Otherwise, push to a registry.
          outputs: ${{ github.event_name == 'pull_request' && 'type=cacheonly' || 'type=registry,push=true' }}
